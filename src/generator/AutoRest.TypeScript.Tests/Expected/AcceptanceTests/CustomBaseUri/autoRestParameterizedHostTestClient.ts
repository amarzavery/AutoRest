/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";

const packageName = 'foo';
const packageVersion = '3.0.0-preview';
/**
 * AutoRestParameterizedHostTestClientOptions for AutoRestParameterizedHostTestClient.
 */
interface AutoRestParameterizedHostTestClientOptions extends msRest.ServiceClientOptions {
  /**
   * @property {string} [host] - A string value that is used as a global part of the parameterized host
   */
  host?: string;
}

class AutoRestParameterizedHostTestClient extends msRest.ServiceClient {
  host: string;
  baseUri: string;

  // Operation groups
  paths: operations.Paths;
  serializer: msRest.Serializer;

  /**
   * @class
   * Initializes a new instance of the AutoRestParameterizedHostTestClient class.
   * @constructor
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   * @param {string} [options.host] - A string value that is used as a global part of the parameterized host
   *
   */
  constructor(options?: AutoRestParameterizedHostTestClientOptions) {

    if (!options) options = {};

    super(undefined, options);

    this.host = 'host';
    this.baseUri = 'http://{accountName}{host}';

    this.addUserAgentInfo(`${packageName}/${packageVersion}`);
    if(options.host !== null && options.host !== undefined) {
      this.host = options.host;
    }
    this.paths = new operations.Paths(this);
    this.serializer = new msRest.Serializer(Mappers);
  }
}

export { AutoRestParameterizedHostTestClient, Models };
